#!/bin/sh -e
#
# The MIT License (MIT)
#
# Copyright (c) 2015 GaÃ«l PORTAY <gael.portay@gmail.com>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

PREFIX=/var/lib/mpkg
VERSION=0.1

die() {
	echo "Error: $*" >&2
	exit 1
}

get_value() {
	sed -n "/$1:/s,.*: *,,p"
}

files() {
	find "$1/" -type f | sed -e "s,^$1,," -e "\:^$PREFIX/:d"
}

package_tgz() {
	local tgzdir=${1:-.}
	local pn=$(cat "$tgzdir$PREFIX/info/"*/control 2>/dev/null | get_value 'Package')
	if [ -z "$pn" ]; then
		die "$1: Invalid directory!"
	fi

	local pv=$(cat "$tgzdir$PREFIX/info/"*/control 2>/dev/null | get_value 'Version')
	pv=${pv:-0}
	local tgz=${pn}_${pv}.tgz

	files "$tgzdir" >"$tgzdir$PREFIX/info/$pn/files"
	( cd "$tgzdir/" && tar czf "$OLDPWD/$tgz" --exclude="$1" * )
	echo "$tgz"
}

do_files() {
	files ${1:-.}
}

usage() {
	cat <<EOF
Usage: ${0##*/} [OPTIONS] PACKAGE...
       ${0##*/} [OPTIONS] DIRECTORY...

Options:
 -f or --files         Print list of files.
 -h or --help          Display this message.
 -v or --version       Display the version.
EOF
}

parse_arguments() {
	FILES=false

	while [ $# -ne 0 ]; do
		if [ "$1" = "-l" ] || [ "$1" = "--files" ]; then
			FILES=true
		elif [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
			usage
			exit 0
		elif [ "$1" = "-v" ] || [ "$1" = "--version" ]; then
			echo $VERSION
			exit 0
		else
			args="$args $1"
		fi
		shift
	done
}

parse_arguments $*

if [ -z "$args" ]; then
	usage >&2
	echo  >&2
	die "Too few arguments!"
fi

for arg in $args; do
	if [ ! -d "$arg" ]; then
		die "$arg: No such directory!"
	fi

	if $FILES; then
		do_files "$arg"
	else
		package_tgz "$arg"
	fi
done
